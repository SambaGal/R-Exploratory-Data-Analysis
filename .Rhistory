my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10, 100)
z * 2 +1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create('testdir')
setwd('testdir')
file.create('mytest.R')
ls()
list.files()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.R')
file.path('mytest3.R')
file.path('folder1', 'folder2')
?dir.create
dir.create('testdir2')
dir.create(file.path('testdir2', 'testdir3'), recursive=TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1,20)
seq(0, 10, by=0.5)
my_seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_alont(my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char = c('My', 'name', 'is')
my_char <-  c('My', 'name', 'is')
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, 'Maria')
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c('X', 'Y', 'X'))
paste(1:3, c('X', 'Y', 'X'), sep='')
paste(1:3, c('X', 'Y', 'Z'), sep='')
paste(LETTERS, 1:4, sep="_")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-INf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>5]
y[y>0]
x[x.0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-C(2,10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c('foo', 'bar', 'norf')
identical(vect, vect2)
vect['bar']
vect[c('foo', 'bar')]
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed=TRUE)
cnames
pm0 <- make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
library(swirl)
swirl()
x0 <- pm0$Sample.Value
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(Dates)
str(pm1$Dates)
str(dates)
dates <- as.Date(as.charachter(dates), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], 'month')
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date, '%Y%m%d'))
dates0 <- as.Date(as.character(pm0sub$Date), '%Y%m%d')
dates1 <- as.Date(as.character(pm1sub$Date), '%Y%m%d')
par(nfrom=c(1,2), mar=c(4,4,2,1))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(x0sub, np.rm=TRUE), lwd=2)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, by='state')
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 51), mrg[,2], xlim=c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[,2], xlim=c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[,3]))
with(mrg, plot(rep(2, 52), mrg[,3]))
with(mrg, points(rep(2, 52), mrg[,3]))
dev.off()
with(mrg, plot(rep(1, 52), mrg[,3]))
dev.off()
with(mrg, plot(rep(1, 52), mrg[,2], xlim=c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[,3]))
segments(rep(1, 52), mrg[,2],rep(2, 52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat = sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0, 1), 100, replace=TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob = 0.7)
flips <- rbinom(100, size=1, prob=0.7)
flips2 <- rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date('1969-01-01')
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:34"
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$dist, y=cars$speed, xlab='Speed')
plot(x=cars$speed, y=cars$dist, xlab='Speed')
plot(x=cars$speed, y=cars$dist, xlab='Speed', ylab='Stopping Distance')
plot(x=cars$speed, y=cars$dist, ylab='Stopping Distance')
plot(x=cars$speed, y=cars$dist, xlab = 'Speedylab='Stopping Distance')
plot(x=cars$speed, y=cars$dist, xlab = 'Speed', lab='Stopping Distance')
plot(x=cars$speed, y=cars$dist, xlab = 'Speed', ylab='Stopping Distance')
plot(cars, main='My Plot')
plot(cars, title='My Plot')
plot(cars, sub='My Plot')
plot(cars, sub='My Plot Subtitle')
plot(cars, col=2)
plot(cars, xlim=c(10, 15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(mpg~cyl, data=mtcars)
hist(cars$mpg)
hist(mtcars$mpg)
install_from_swirl('Getting and Cleaning Data')
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion('dplyr')
cran <- tbl_df(mydf)
rm('mydf')
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=='swirl')
filter(cran, r_version=='3.1.1', country == 'US')
?Comparison
filter(cran, r_version=='3.0.2', country == 'IN')
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country=='US' | country=='IN')
filter(cran, size > 100500, r_os == 'linux-gnu')
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
setwd("C:/Users/mfrey/Desktop/R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Machine Learning Projects/CSV files for ML Projects")
df <- read.csv('bikeshare.csv')
print(head(df))
pl <- ggplot(df, aes(x=count, y=temp)) + geom_point(alpha=0.37)
print(pl)
library(ggplot2)
pl <- ggplot(df, aes(x=count, y=temp)) + geom_point(alpha=0.37)
print(pl)
pl <- ggplot(df, aes(x=temp, y=count)) + geom_point(alpha=0.37, color='blue')
print(pl)
pl <- ggplot(df, aes(x=temp, y=count)) + geom_point(alpha=0.37)+
scale_color_gradient('blue')
print(pl)
pl <- ggplot(df, aes(x=temp, y=count)) + geom_point(alpha=0.37)+
scale_color_gradient('blue', 'blue')
print(pl)
pl <- ggplot(df, aes(x=temp, y=count)) + geom_point(alpha=0.37)+
scale_color_gradient(low='blue',high= 'blue')
print(pl)
pl <- ggplot(df, aes(x=temp, y=count, color=qsec)) + geom_point(alpha=0.37)
#scale_color_gradient(low='blue',high= 'blue')
print(pl)
pl <- ggplot(df, aes(x=temp, y=count, color=temp)) + geom_point(alpha=0.37)
#scale_color_gradient(low='blue',high= 'blue')
print(pl)
?to.POSIXct
df$datetime
to.PISIXct(df$datetime)
to.POSIXct(df$datetime)
as.POSIXct(df$datetime)
df$datetime <- as.POSIXct(df$datetime)
class(df$datetime)
pl1 <- ggplot(df, aes(x=datetime, y=count, color=temp))+geom_point(alpha=0.37)
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count, color=temp))+geom_point(alpha=0.37)+
scale_fill_gradient(high='red', low='green')
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count, color=temp))+geom_point(alpha=0.37)+
scale_fill_gradient(high='red', low='green')
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count, color=temp))+geom_point(alpha=0.37)+
scale_fill_gradient( low='green', high='red')
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count, color=temp))+geom_point(alpha=0.37)+scale_fill_gradient( low='green', high='red')
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count, color=temp))+geom_point(alpha=0.37)+
scale_fill_continuous( low='green', high='red')
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count, color=temp))+geom_point(alpha=0.37)+
scale_fill_continuous( low='green', high='red') +theme_bw()
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count))+geom_point(alpha=0.37, aes(color=temp))+
scale_fill_continuous( low='green', high='red') +theme_bw()
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count))+geom_point(alpha=0.37, aes(color=temp))+
scale_fill_continuous( low='#55D8CE', high='#FF6E2E') +theme_bw()
print(pl1)
pl1 <- ggplot(df, aes(x=datetime, y=count))+geom_point(alpha=0.37, aes(col=temp))+
scale_fill_continuous( low='#55D8CE', high='#FF6E2E') +theme_bw()
print(pl1)
ggplot(df,aes(datetime,count)) + geom_point(aes(color=temp),alpha=0.5)  + scale_color_continuous(low='#55D8CE',high='#FF6E2E') +theme_bw()
pl1 <- ggplot(df,aes(datetime,count)) + geom_point(aes(color=temp),alpha=0.5)  + scale_color_continuous(low='#55D8CE',high='#FF6E2E') +theme_bw()
print(pl1)
cor(df)
cor(df[, c('temp', 'count')])
print(cor(df[, c('temp', 'count')]))
bx <- ggplot(df, x=factor(season)) + geom_boxplot()
print(bx)
bx <- ggplot(df, aes(x=factor(season))) + geom_boxplot()
print(bx)
bx <- ggplot(df, aes(x=factor(season))) + geom_boxplot(stat='boxplot')
print(bx)
bx <- ggplot(df, aes(x=factor(season), y=count)) + geom_boxplot()
print(bx)
bx <- ggplot(df, aes(x=factor(season), y=count)) +
geom_boxplot(aes(col=factor(season)))
print(bx)
df$datetime$hour
df$datetime[4]
format(df$datetime, "%H")
df$hour <- format(df$datetime, "%H")
format(df$datetime, "%H")
str(df)
setwd("C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2")
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot5.R')
sources <- motor_vehicle_df$SCC
#subset NEI/baltimore to motor vehicle sources only
nei_motor_vehicle <- subset(baltimore, CSS %in% sources)
#subset NEI/baltimore to motor vehicle sources only
nei_motor_vehicle <- subset(baltimore, SCC %in% sources)
#get emissions total by year
by_year <- nei_motor_vehicle %>% group_by(year) %>% summarise(Emissions=sum(Emissions))
barplot(by_year$Emissions, names.arg = by_year$year, main=" Total PM 2.5 Emission from Motor Vehicle Sources in Baltimore",
ylab='PM 2.5 in tons')
dev.copy(png, file = "Plot5.png")
dev.off()
los_angeles <- filter(NEI, fips=="06037")
balt_la <- filter(NEI, fips=='24510', fips=='06037')
table(balt_la$fips)
balt_la$fips
balt_la
balt_la <- filter(NEI, fips=='24510' | fips=='06037')
balt_la
table(balt_la$fips)
#subset NEI/baltimore-LA to motor vehicle sources only
nei_motor_vehicle <- subset(balt_la, SCC %in% sources)
by_year <- nei_motor_vehicle %>% group_by(year) %>% summarise(Emissions=sum(Emissions))
by_year_loc <- nei_motor_vehicle %>% group_by(year, fips) %>% summarise(Emissions=sum(Emissions))
by_year_loc
library(ggplot2)
g <- ggplot(by_year_loc, aes(x=factor(year),y=Emissions, fill=fips)) +
geom_bar(stat='identity', position='dodge') + xlab('Year')+
ylab('PM 2.5 Emissions in tons') + ggtitle('Total PM 2.5 Emissions')+
scale_fill_discrete('Location')
print(g)
g <- ggplot(by_year_loc, aes(x=factor(year),y=Emissions, fill=fips)) +
geom_bar(stat='identity', position='dodge') + xlab('Year')+
ylab('PM 2.5 Emissions in tons') + ggtitle('Total PM 2.5 Emissions from Motor Vehicles Baltimore and Los Angeles')+
scale_fill_discrete('Location')
print(g)
g <- ggplot(by_year_loc, aes(x=factor(year),y=Emissions, fill=fips)) +
geom_bar(stat='identity', position='dodge') + xlab('Year')+
ylab('PM 2.5 Emissions in tons') + ggtitle('Total PM 2.5 Emissions from Motor Vehicles Baltimore and Los Angeles')+
scale_fill_discrete("Location")
print(g)
g <- ggplot(by_year_loc, aes(x=factor(year),y=Emissions, fill=fips)) +
geom_bar(stat='identity', position='dodge') + xlab('Year')+
ylab('PM 2.5 Emissions in tons') + ggtitle('Total PM 2.5 Emissions from Motor Vehicles Baltimore and Los Angeles')+
scale_fill_discrete(name="Location")
print(g)
g <- ggplot(by_year_loc, aes(x=factor(year),y=Emissions, fill=fips)) +
geom_bar(stat='identity', position='dodge') + xlab('Year')+
ylab('PM 2.5 Emissions in tons') + ggtitle('Total PM 2.5 Emissions from Motor Vehicles Baltimore and Los Angeles')+
scale_fill_discrete(name="Location", labels=c("Los Angeles", 'Baltimore'))
print(g)
dev.copy(png, file = "Plot5.png")
dev.off()
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot1.R')
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot2.R')
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot3.R')
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot4.R')
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot5.R')
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot6.R')
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot5.R')
source('C:/Users/mfrey/Desktop/Exploratory Data Analysis/Project 2/Plot6.R')
